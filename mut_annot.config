# Mutation Annotation Pipeline Configuration File

# Will be added to snpEff.config
# Species Latin name (unabbreviated)
species="Saccharina latissima"
# Information about particular reference genome (version, individual, etc.)
genome_info="SL-CT1-FG3 v1.0"

# Input files
# All input files can be compressed with GNU zip
path_to_files=/project/noujdine_61/kdeweese/latissima
# Reference genome (FASTA)
genome=${path_to_files}/Assembly/Assembled_scaffolds__masked_/SlaSLCT1FG3_1_AssemblyScaffolds_Repeatmasked.fasta.gz
# Annotation file (GFF3)
# GFF3 file MUST end in '.gff3' or '.gff3.gz'
annot=${path_to_files}/Annotation/Filtered_Models___best__/Genes/SlaSLCT1FG3_1_GeneCatalog_20210608.gff3.gz
# Protein FASTA
prot=${path_to_files}/Annotation/Filtered_Models___best__/Proteins/SlaSLCT1FG3_1_GeneCatalog_proteins_20210608.aa.fasta.gz
# CDS FASTA
cds=${path_to_files}/Annotation/Filtered_Models___best__/CDS/SlaSLCT1FG3_1_GeneCatalog_CDS_20210608.fasta.gz
# VCF file
vcf=/scratch2/kdeweese/latissima/popgen_all/master_SlaSLCT1FG3_1_AssemblyScaffolds_Repeatmasked.vcf.gz
# Build candidate genes FASTA
# Directory containing file(s) needed to build candidate genes FASTA
candidate_genes_build=candidate_genes_build
gk_dir=Genes_for_Kelly
ecto_prot_link=https://bioinformatics.psb.ugent.be/gdb/ectocarpusV2/EctsiV2_prot_LATEST.tfa.gz
ecto_prot=EctsiV2_prot_LATEST.tfa.gz
ecto_prot_unzip=EctsiV2_prot_LATEST.tfa
ecto_list=ecto_meiotic_genes.list
# Multi-FASTA of genes of interest for BLASTs against reference protein FASTA
query=candidate_genes.fa
# List of DE-identified CDS IDs to subset from VCF
DE_list=DE_transcripts.list
# List of regions to extract from annotated VCF
gene_list=gene.list

# Optional: PATH to conda.sh file ([...]/etc/profile.d/conda.sh)
conda_sh=~/bin/anaconda3/etc/profile.d/conda.sh

# Optional: PATH to directory containing all scripts from this repository
# PLEASE define $scripts_dir if you are not running the pipeline from within the repository
scripts_dir=~/scripts/s-latissima-mutation-annotation






### DO NOT EDIT BELOW THIS LINE ###
# Optional: Anaconda configuration
# Attempt to source Anaconda from $conda_sh (if provided),
# then activate mut_annot conda environment
source_conda () {
	[[ $1 ]] && local conda_sh=$1 || echo "Error - no conda.sh file provided."
	if [[ $conda_sh ]] && [[ -f $conda_sh ]]
	then
		source $conda_sh
		[[ $? -eq 0 ]] && echo "Anaconda source successful." || \
{ echo "Error on Anaconda source from ${conda_sh}. Exiting..."; exit 1; }
		conda activate mut_annot
		[[ $? -eq 0 ]] && \
echo "Activation of conda env 'mut_annot' successful." || \
{ echo "Error activating conda env 'mut_annot'. Exiting..."; exit 1; }
	else
		echo "conda.sh file $conda_sh not detected, expecting \
dependencies in PATH."
	fi
}

# Ensure $scripts_dir has trailing slash (if provided)
[[ $scripts_dir ]] && scripts_dir="${scripts_dir}/"

# Extract names from input files
# Genome
genome_basename=$(basename -- $genome)
genome_basename_unzip=$(echo $genome_basename | sed 's/\.gz//g')
genome_base=$(echo $genome_basename | sed 's/\..*//g')
# Annotation file
annot_basename=$(basename -- $annot)
annot_basename_unzip=$(echo $annot_basename | sed 's/\.gz//g')
annot_filetype=$(echo $annot_basename_unzip |  sed 's/.*\.//g')
# Protein FASTA
prot_basename=$(basename -- $prot)
prot_basename_unzip=$(echo $prot_basename | sed 's/\.gz//g')
# CDS FASTA
cds_basename=$(basename -- $cds)
cds_basename_unzip=$(echo $cds_basename | sed 's/\.gz//g')
# VCF file
vcf_basename=$(basename -- $vcf)
vcf_basename_unzip=$(echo $vcf_basename | sed 's/\.gz//g')
vcf_base=$(echo $vcf_basename | sed 's/\..*//g')
# BLAST query
query_no_path_or_ext=$(basename -- $query | sed 's/\..*//g')
# BLAST database
# Reformats database given as filepath and with file extension
input_db=$prot
input_db_basename=$(basename -- $input_db)
input_db_basename_unzip=$(echo $input_db_basename | sed 's/\.gz//g')
db=$(echo $input_db_basename | sed 's/\..*//g')
db_ext=$(echo $input_db_basename | sed 's/.*\.//g')


